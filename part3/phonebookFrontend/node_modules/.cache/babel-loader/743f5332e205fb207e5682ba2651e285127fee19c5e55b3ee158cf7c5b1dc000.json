{"ast":null,"code":"var _jsxFileName = \"/Users/rb/Desktop/FullstackCourse/part2/phonebook/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport personServices from './services/persons';\nimport Filter from './components/Filter';\nimport Form from './components/Form';\nimport Persons from './components/Persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [persons, setPersons] = useState([]);\n\n  //use effect is being used to get data\n  useEffect(() => {\n    personServices.getAll();\n  });\n\n  //search filter\n  const [newFilter, setNewFilter] = useState('');\n  //new person\n  const [newName, setNewName] = useState('');\n  //phone numbers\n  const [newPhoneNumber, setNewPhoneNumber] = useState('');\n\n  //handlers\n\n  const handleFilter = e => setNewFilter(e.target.value);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const nameObject = {\n      name: newName,\n      number: newPhoneNumber,\n      id: persons.length + 1\n    };\n    if (persons.map(p => p.name).includes(newName)) {\n      alert(`${newName} is already added to phonebook`);\n    } else {\n      personServices.create(nameObject);\n    }\n  };\n  const handleNameInput = e => {\n    //e.target.value is the value being put into the form\n    setNewName(e.target.value);\n  };\n  const handleNumInput = e => {\n    //e.target.value is the value being put into the form\n    setNewPhoneNumber(e.target.value);\n  };\n\n  //end of handlers\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      handleFilter: handleFilter,\n      value: newFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      handleSubmit: handleSubmit,\n      handleNameInput: handleNameInput,\n      newName: newName,\n      handleNumInput: handleNumInput,\n      newPhoneNumber: newPhoneNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      persons: persons,\n      newFilter: newFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"mn8DpUTj0UOOyNVTlwQoXbSl7g8=\");\n_c = App;\nexport default App;\n\n/*\n1) Filter is being imported from Filter.js and has two props called handleFilter and value.\n  from Filter.js handleFilter prop is being called to execute on change, and the newFilter prop is being used as the value\n\n  handleFilter function is being used to change the value of setNewFilter. setNewFilter is being sent to Filter. \n\n\n\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","personServices","Filter","Form","Persons","App","persons","setPersons","getAll","newFilter","setNewFilter","newName","setNewName","newPhoneNumber","setNewPhoneNumber","handleFilter","e","target","value","handleSubmit","preventDefault","nameObject","name","number","id","length","map","p","includes","alert","create","handleNameInput","handleNumInput"],"sources":["/Users/rb/Desktop/FullstackCourse/part2/phonebook/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios';\n\nimport personServices from './services/persons'\n\nimport Filter from './components/Filter'\nimport Form from './components/Form'\nimport Persons from './components/Persons'\n\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n\n\n  //use effect is being used to get data\n  useEffect(()=>{\n  personServices.getAll()\n  })\n\n\n\n\n\n  //search filter\n  const [newFilter, setNewFilter] = useState('')\n  //new person\n  const [newName, setNewName] = useState('')\n  //phone numbers\n  const [newPhoneNumber, setNewPhoneNumber] = useState('')\n\n  //handlers\n\n  const handleFilter = (e)=> setNewFilter(e.target.value)\n\n  const handleSubmit = (e)=>{\n    e.preventDefault()\n    \n    const nameObject = \n    {\n      name:newName,\n      number:newPhoneNumber,\n      id: persons.length+1\n    }  \n\n    if(persons.map((p)=>p.name).includes(newName))\n    {\n      alert(`${newName} is already added to phonebook`)\n    }\n    else\n    {\n      personServices.create(nameObject)\n    }\n\n\n\n  }\n  \n  const handleNameInput = (e)=>{\n    //e.target.value is the value being put into the form\n    setNewName(e.target.value)\n  }\n\n  const handleNumInput = (e)=>{\n    //e.target.value is the value being put into the form\n    setNewPhoneNumber(e.target.value)\n  }\n\n    //end of handlers\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter handleFilter={handleFilter} value={newFilter}/>\n      <h3>Add a new</h3>\n      <Form \n        handleSubmit={handleSubmit} \n        handleNameInput={handleNameInput} \n        newName={newName}\n        handleNumInput={handleNumInput}\n        newPhoneNumber={newPhoneNumber}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={persons} newFilter={newFilter}/>\n      \n    </div>\n  )\n}\n\nexport default App\n\n/*\n1) Filter is being imported from Filter.js and has two props called handleFilter and value.\n  from Filter.js handleFilter prop is being called to execute on change, and the newFilter prop is being used as the value\n\n  handleFilter function is being used to change the value of setNewFilter. setNewFilter is being sent to Filter. \n\n\n\n*/"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,cAAc,MAAM,oBAAoB;AAE/C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,OAAO,MAAM,sBAAsB;AAAA;AAG1C,MAAMC,GAAG,GAAG,MAAM;EAAA;EAEhB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAG1C;EACAC,SAAS,CAAC,MAAI;IACdE,cAAc,CAACO,MAAM,EAAE;EACvB,CAAC,CAAC;;EAMF;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C;EACA,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C;EACA,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAExD;;EAEA,MAAMiB,YAAY,GAAIC,CAAC,IAAIN,YAAY,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAEvD,MAAMC,YAAY,GAAIH,CAAC,IAAG;IACxBA,CAAC,CAACI,cAAc,EAAE;IAElB,MAAMC,UAAU,GAChB;MACEC,IAAI,EAACX,OAAO;MACZY,MAAM,EAACV,cAAc;MACrBW,EAAE,EAAElB,OAAO,CAACmB,MAAM,GAAC;IACrB,CAAC;IAED,IAAGnB,OAAO,CAACoB,GAAG,CAAEC,CAAC,IAAGA,CAAC,CAACL,IAAI,CAAC,CAACM,QAAQ,CAACjB,OAAO,CAAC,EAC7C;MACEkB,KAAK,CAAE,GAAElB,OAAQ,gCAA+B,CAAC;IACnD,CAAC,MAED;MACEV,cAAc,CAAC6B,MAAM,CAACT,UAAU,CAAC;IACnC;EAIF,CAAC;EAED,MAAMU,eAAe,GAAIf,CAAC,IAAG;IAC3B;IACAJ,UAAU,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMc,cAAc,GAAIhB,CAAC,IAAG;IAC1B;IACAF,iBAAiB,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;;EAEC;;EAEF,oBACE;IAAA,wBACE;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eAClB,QAAC,MAAM;MAAC,YAAY,EAAEH,YAAa;MAAC,KAAK,EAAEN;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,eACvD;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eAClB,QAAC,IAAI;MACH,YAAY,EAAEU,YAAa;MAC3B,eAAe,EAAEY,eAAgB;MACjC,OAAO,EAAEpB,OAAQ;MACjB,cAAc,EAAEqB,cAAe;MAC/B,cAAc,EAAEnB;IAAe;MAAA;MAAA;MAAA;IAAA,QAC/B,eACF;MAAA,UAAI;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK,eAChB,QAAC,OAAO;MAAC,OAAO,EAAEP,OAAQ;MAAC,SAAS,EAAEG;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAE9C;AAEV,CAAC;AAAA,GA7EKJ,GAAG;AAAA,KAAHA,GAAG;AA+ET,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}