{"ast":null,"code":"var _jsxFileName = \"/Users/rb/Desktop/FullstackCourse/part2/phonebook/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Filter from './components/Filter';\n\n// const PersonForm = (props)=>{\n//   return(\n//     <div>\n//       <form>\n//         <input value={props.name} onChange={handleNameChange}/>\n//       </form>\n//     </div>\n//   )\n// }\n\n// const handleNameChange = (e)=>{\n//   //console.log(e.target.value)\n//   //e.target.value is the value being put into the form\n//   setNewName(e.target.value)\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Person = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [props.name, \" \", props.number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = Person;\nconst App = () => {\n  _s();\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas',\n    number: '040-123456',\n    id: 1\n  }, {\n    name: 'Ada Lovelace',\n    number: '39-44-5323523',\n    id: 2\n  }, {\n    name: 'Dan Abramov',\n    number: '12-43-234345',\n    id: 3\n  }, {\n    name: 'Mary Poppendieck',\n    number: '39-23-6423122',\n    id: 4\n  }]);\n  const [newFilter, setNewFilter] = useState('');\n  //new person\n  const [newName, setNewName] = useState('');\n  //phone numbers\n  const [newPhoneNumber, setNewPhoneNumber] = useState('');\n\n  //handlers\n  const handleFilter = e => setNewFilter(e.target.value);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const nameObject = {\n      name: newName,\n      number: newPhoneNumber,\n      id: persons.length + 1\n    };\n    const newPerson = {\n      name: newName,\n      number: newNum\n    };\n    if (persons.map(p => p.name).includes(newName)) {\n      alert(`${newName} is already added to phonebook`);\n    } else {\n      alert('ok');\n      setPersons(persons.concat(nameObject));\n      setNewName('');\n      setNewPhoneNumber('');\n    }\n  };\n\n  //end handlers \n\n  /*\n  const addInfo = (e)=>\n  {\n     e.preventDefault()\n    \n    const nameObject = \n    {\n      name:newName,\n      number:newPhoneNumber,\n      id: persons.length+1\n    }\n     //check if a person name is already in the system\n    if(persons.map((p)=>p.name).includes(newName))\n    {\n      alert(`${newName} is already added to phonebook`)\n    }\n    //if name isn't in the system then all the data from the new nameObject is sent to setPerson\n    else{\n      alert('ok')\n      setPersons(persons.concat(nameObject))\n      setNewName('')\n      setNewPhoneNumber('')\n    }\n  }\n   const handleNameChange = (e)=>{\n    //console.log(e.target.value)\n    //e.target.value is the value being put into the form\n    setNewName(e.target.value)\n  }\n   const handleNumChange =  (e)=>{\n    setNewPhoneNumber(e.target.value)\n  }\n   const Person = (props)=>{\n    return(\n      <h3>{props.name} {props.number}</h3>\n    )\n    \n  }\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      handler: handleFilter,\n      value: newFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n//<PersonForm name={newName} onChange={handleNameChange}/>\n\n/*\n    <div>\n      <h1>Filter shown with: <input type='text' onChange={(e)=> filterPeople(e)}/></h1>\n      {persons.map(p => \n      {\n        return <Person key ={p.id} name={p.name} number={p.number}/>\n      })}\n    </div>    \n*/\n_s(App, \"gle7s6IG4yYW1GVn3NI5Yie+DGI=\");\n_c2 = App;\nexport default App;\n\n/*\nconst App = () => {\n  // ...\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Filter ... />\n\n      <h3>Add a new</h3>\n\n      <PersonForm \n        ...\n      />\n\n      <h3>Numbers</h3>\n\n      <Persons ... />\n    </div>\n  )\n}\n*/\nvar _c, _c2;\n$RefreshReg$(_c, \"Person\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","Filter","Person","props","name","number","App","persons","setPersons","id","newFilter","setNewFilter","newName","setNewName","newPhoneNumber","setNewPhoneNumber","handleFilter","e","target","value","handleSubmit","preventDefault","nameObject","length","newPerson","newNum","map","p","includes","alert","concat"],"sources":["/Users/rb/Desktop/FullstackCourse/part2/phonebook/src/App.js"],"sourcesContent":["import { useState } from 'react'\nimport Filter from './components/Filter'\n\n// const PersonForm = (props)=>{\n//   return(\n//     <div>\n//       <form>\n//         <input value={props.name} onChange={handleNameChange}/>\n//       </form>\n//     </div>\n//   )\n// }\n\n// const handleNameChange = (e)=>{\n//   //console.log(e.target.value)\n//   //e.target.value is the value being put into the form\n//   setNewName(e.target.value)\n// }\n\n\nconst Person = (props) => {\n  return(\n    <div>\n      <h3>{props.name} {props.number}</h3>\n    </div>  \n  )\n}\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([\n    { name: 'Arto Hellas', number: '040-123456', id: 1 },\n    { name: 'Ada Lovelace', number: '39-44-5323523', id: 2 },\n    { name: 'Dan Abramov', number: '12-43-234345', id: 3 },\n    { name: 'Mary Poppendieck', number: '39-23-6423122', id: 4 }\n  ])\n\n  const [newFilter, setNewFilter] = useState('')\n  //new person\n  const [newName, setNewName] = useState('')\n  //phone numbers\n  const [newPhoneNumber, setNewPhoneNumber] = useState('')\n\n  //handlers\n    const handleFilter = (e)=> setNewFilter(e.target.value)\n\n    const handleSubmit = (e)=>{\n      e.preventDefault()\n    \n      const nameObject = \n      {\n        name:newName,\n        number:newPhoneNumber,\n        id: persons.length+1\n      }  \n\n      const newPerson = {name:newName, number:newNum}\n\n      if(persons.map((p)=>p.name).includes(newName))\n      {\n        alert(`${newName} is already added to phonebook`)\n      }\n      else{\n        alert('ok')\n        setPersons(persons.concat(nameObject))\n        setNewName('')\n        setNewPhoneNumber('')\n      }\n\n    }\n\n  //end handlers \n\n  /*\n  const addInfo = (e)=>\n  {\n\n    e.preventDefault()\n    \n    const nameObject = \n    {\n      name:newName,\n      number:newPhoneNumber,\n      id: persons.length+1\n    }\n\n    //check if a person name is already in the system\n    if(persons.map((p)=>p.name).includes(newName))\n    {\n      alert(`${newName} is already added to phonebook`)\n    }\n    //if name isn't in the system then all the data from the new nameObject is sent to setPerson\n    else{\n      alert('ok')\n      setPersons(persons.concat(nameObject))\n      setNewName('')\n      setNewPhoneNumber('')\n    }\n  }\n\n  const handleNameChange = (e)=>{\n    //console.log(e.target.value)\n    //e.target.value is the value being put into the form\n    setNewName(e.target.value)\n  }\n\n  const handleNumChange =  (e)=>{\n    setNewPhoneNumber(e.target.value)\n  }\n\n  const Person = (props)=>{\n    return(\n      <h3>{props.name} {props.number}</h3>\n    )\n    \n  }\n  */\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter handler={handleFilter} value={newFilter}/>\n      <h3>Add a new</h3>\n      <Form handleSubmit={handleSubmit}/>\n      \n    </div>\n  )\n}\n\n//<PersonForm name={newName} onChange={handleNameChange}/>\n\n/*\n    <div>\n      <h1>Filter shown with: <input type='text' onChange={(e)=> filterPeople(e)}/></h1>\n      {persons.map(p => \n      {\n        return <Person key ={p.id} name={p.name} number={p.number}/>\n      })}\n    </div>    \n*/\n\nexport default App\n\n/*\nconst App = () => {\n  // ...\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Filter ... />\n\n      <h3>Add a new</h3>\n\n      <PersonForm \n        ...\n      />\n\n      <h3>Numbers</h3>\n\n      <Persons ... />\n    </div>\n  )\n}\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}