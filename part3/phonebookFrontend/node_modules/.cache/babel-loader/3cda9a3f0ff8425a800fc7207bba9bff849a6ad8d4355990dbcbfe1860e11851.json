{"ast":null,"code":"var _jsxFileName = \"/Users/rb/Desktop/FullstackCourse/part2/phonebook/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filter = (props, _ref) => {\n  let {\n    persons\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => filterPeople(e, {\n        persons\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Filter;\nconst filterPeople = (e, _ref2) => {\n  let {\n    persons\n  } = _ref2;\n  console.log(persons);\n  //used to prevent page refresh\n  e.preventDefault();\n\n  //search is from the value of input (e), it is then sent to filterPeople\n  const search = e.target.value.toLowerCase();\n  //this is looking for each name inside of persons letter by letter that is inlcude from search, if found it will appear\n  const filteredNames = persons.filter(names => names.name.toLowerCase().includes(search));\n  // //this is then showing all the people with the filteredNames\n  setPersons(filteredNames);\n};\nconst Person = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [props.name, \" \", props.number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Person;\nconst App = () => {\n  _s();\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas',\n    number: '040-123456',\n    id: 1\n  }, {\n    name: 'Ada Lovelace',\n    number: '39-44-5323523',\n    id: 2\n  }, {\n    name: 'Dan Abramov',\n    number: '12-43-234345',\n    id: 3\n  }, {\n    name: 'Mary Poppendieck',\n    number: '39-23-6423122',\n    id: 4\n  }]);\n  const [newName, setNewName] = useState('');\n  //phone numbers\n  const [newPhoneNumber, setNewPhoneNumber] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      persons: persons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n/*\n    <div>\n      <h1>Filter shown with: <input type='text' onChange={(e)=> filterPeople(e)}/></h1>\n      {persons.map(p => \n      {\n        return <Person key ={p.id} name={p.name} number={p.number}/>\n      })}\n    </div>    \n*/\n_s(App, \"venP7d36uZuP3+OJ9dk+a6ttwc4=\");\n_c3 = App;\nexport default App;\n\n/*\nconst App = () => {\n  // ...\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Filter ... />\n\n      <h3>Add a new</h3>\n\n      <PersonForm \n        ...\n      />\n\n      <h3>Numbers</h3>\n\n      <Persons ... />\n    </div>\n  )\n}\n*/\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Filter\");\n$RefreshReg$(_c2, \"Person\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","Filter","props","persons","e","filterPeople","console","log","preventDefault","search","target","value","toLowerCase","filteredNames","filter","names","name","includes","setPersons","Person","number","App","id","newName","setNewName","newPhoneNumber","setNewPhoneNumber"],"sources":["/Users/rb/Desktop/FullstackCourse/part2/phonebook/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Filter = (props,{persons}) => {\n  return(\n    <div>\n      <input type=\"text\" onChange={(e)=> filterPeople(e,{persons})}/>\n    </div>\n  )\n}\n\nconst filterPeople = (e,{persons})=>{\n  console.log(persons)\n  //used to prevent page refresh\n  e.preventDefault()\n\n  //search is from the value of input (e), it is then sent to filterPeople\n  const search = e.target.value.toLowerCase()\n  //this is looking for each name inside of persons letter by letter that is inlcude from search, if found it will appear\n  const filteredNames = persons.filter(names => names.name.toLowerCase().includes(search))\n  // //this is then showing all the people with the filteredNames\n  setPersons(filteredNames)\n\n}\n\n\nconst Person = (props) => {\n  return(\n    <div>\n      <h3>{props.name} {props.number}</h3>\n    </div>  \n  )\n}\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([\n    { name: 'Arto Hellas', number: '040-123456', id: 1 },\n    { name: 'Ada Lovelace', number: '39-44-5323523', id: 2 },\n    { name: 'Dan Abramov', number: '12-43-234345', id: 3 },\n    { name: 'Mary Poppendieck', number: '39-23-6423122', id: 4 }\n  ])\n\n  const [newName, setNewName] = useState('')\n  //phone numbers\n  const [newPhoneNumber, setNewPhoneNumber] = useState('')\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter persons={persons}/>\n    </div>\n  )\n}\n\n/*\n    <div>\n      <h1>Filter shown with: <input type='text' onChange={(e)=> filterPeople(e)}/></h1>\n      {persons.map(p => \n      {\n        return <Person key ={p.id} name={p.name} number={p.number}/>\n      })}\n    </div>    \n*/\n\nexport default App\n\n/*\nconst App = () => {\n  // ...\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Filter ... />\n\n      <h3>Add a new</h3>\n\n      <PersonForm \n        ...\n      />\n\n      <h3>Numbers</h3>\n\n      <Persons ... />\n    </div>\n  )\n}\n*/"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA;AAEhC,MAAMC,MAAM,GAAG,CAACC,KAAK,WAAe;EAAA,IAAd;IAACC;EAAO,CAAC;EAC7B,oBACE;IAAA,uBACE;MAAO,IAAI,EAAC,MAAM;MAAC,QAAQ,EAAGC,CAAC,IAAIC,YAAY,CAACD,CAAC,EAAC;QAACD;MAAO,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA;EAAE;IAAA;IAAA;IAAA;EAAA,QAC3D;AAEV,CAAC;AAAA,KANKF,MAAM;AAQZ,MAAMI,YAAY,GAAG,CAACD,CAAC,YAAa;EAAA,IAAZ;IAACD;EAAO,CAAC;EAC/BG,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;EACpB;EACAC,CAAC,CAACI,cAAc,EAAE;;EAElB;EACA,MAAMC,MAAM,GAAGL,CAAC,CAACM,MAAM,CAACC,KAAK,CAACC,WAAW,EAAE;EAC3C;EACA,MAAMC,aAAa,GAAGV,OAAO,CAACW,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACJ,WAAW,EAAE,CAACK,QAAQ,CAACR,MAAM,CAAC,CAAC;EACxF;EACAS,UAAU,CAACL,aAAa,CAAC;AAE3B,CAAC;AAGD,MAAMM,MAAM,GAAIjB,KAAK,IAAK;EACxB,oBACE;IAAA,uBACE;MAAA,WAAKA,KAAK,CAACc,IAAI,EAAC,GAAC,EAACd,KAAK,CAACkB,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA;EAAM;IAAA;IAAA;IAAA;EAAA,QAChC;AAEV,CAAC;AAAA,MANKD,MAAM;AAQZ,MAAME,GAAG,GAAG,MAAM;EAAA;EAEhB,MAAM,CAAClB,OAAO,EAAEe,UAAU,CAAC,GAAGlB,QAAQ,CAAC,CACrC;IAAEgB,IAAI,EAAE,aAAa;IAAEI,MAAM,EAAE,YAAY;IAAEE,EAAE,EAAE;EAAE,CAAC,EACpD;IAAEN,IAAI,EAAE,cAAc;IAAEI,MAAM,EAAE,eAAe;IAAEE,EAAE,EAAE;EAAE,CAAC,EACxD;IAAEN,IAAI,EAAE,aAAa;IAAEI,MAAM,EAAE,cAAc;IAAEE,EAAE,EAAE;EAAE,CAAC,EACtD;IAAEN,IAAI,EAAE,kBAAkB;IAAEI,MAAM,EAAE,eAAe;IAAEE,EAAE,EAAE;EAAE,CAAC,CAC7D,CAAC;EAEF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC1C;EACA,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAExD,oBACE;IAAA,wBACE;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eAClB,QAAC,MAAM;MAAC,OAAO,EAAEG;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACvB;AAEV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,GArBMkB,GAAG;AAAA,MAAHA,GAAG;AA+BT,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}