{"ast":null,"code":"var _jsxFileName = \"/Users/rb/Desktop/FullstackCourse/part2/phonebook/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Note from './components/Note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = props => {\n  _s();\n  const [notes, setNotes] = useState(props.notes);\n  const [newNote, setNewNote] = useState('a new note...');\n\n  //  console.log(newNote)\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1\n    };\n    setNotes(notes.concat(noteObject));\n    setNewNote('');\n  };\n  const handleNoteChange = event => {\n    // console.log(event.target.value)\n    // setNewNote(event.target.value)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"yz5azxu9TnVq+mI3YcN10Qb5ng8=\");\n_c = App;\nexport default App;\n\n//steps of how this works \n/*\n1) you create a form that calls addNote function \n2) addNote function first prevents the form from refreshing using the preventDefault, \nin addNote a note object is created that is holding the value of newNote (new note has no value and instead has a placeholder value using useState())\nand at the same time creating an id by adding one to the array based on the array from index.js:\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <App notes={notes} />\n)\n\nafter the object is created setNotes is called and copies the array from the noteObject and the new note is is replaced with a blank slate.\n\n3) the input has two values newNote and onChange, newNote is the blank value and the onChange handleNoteChange Function \n\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Note","App","props","notes","setNotes","newNote","setNewNote","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","important","Math","random","id","length","concat","handleNoteChange","map","note"],"sources":["/Users/rb/Desktop/FullstackCourse/part2/phonebook/src/App.js"],"sourcesContent":["import { useState } from 'react'\nimport Note from './components/Note'\n\n\nconst App = (props) => {\n\n  const [notes, setNotes] = useState(props.notes)\n  const [newNote, setNewNote] = useState('a new note...') \n\n//  console.log(newNote)\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    }\n  \n    setNotes(notes.concat(noteObject))\n    setNewNote('')\n  }\n\n  const handleNoteChange = (event)=>{\n   // console.log(event.target.value)\n   // setNewNote(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <ul>\n        {notes.map(note => \n          <Note key={note.id} note={note} />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange}/>        \n        <button type=\"submit\">save</button>\n      </form>   \n    </div>\n  )\n}\n\nexport default App\n\n//steps of how this works \n/*\n1) you create a form that calls addNote function \n2) addNote function first prevents the form from refreshing using the preventDefault, \nin addNote a note object is created that is holding the value of newNote (new note has no value and instead has a placeholder value using useState())\nand at the same time creating an id by adding one to the array based on the array from index.js:\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <App notes={notes} />\n)\n\nafter the object is created setNotes is called and copies the array from the noteObject and the new note is is replaced with a blank slate.\n\n3) the input has two values newNote and onChange, newNote is the blank value and the onChange handleNoteChange Function \n\n*/"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,mBAAmB;AAAA;AAGpC,MAAMC,GAAG,GAAIC,KAAK,IAAK;EAAA;EAErB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAACG,KAAK,CAACC,KAAK,CAAC;EAC/C,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,eAAe,CAAC;;EAEzD;;EAEE,MAAMQ,OAAO,GAAIC,KAAK,IAAK;IACzBA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,UAAU,GAAG;MACjBC,OAAO,EAAEN,OAAO;MAChBO,IAAI,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;MAC9BC,SAAS,EAAEC,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG;MAC9BC,EAAE,EAAEf,KAAK,CAACgB,MAAM,GAAG;IACrB,CAAC;IAEDf,QAAQ,CAACD,KAAK,CAACiB,MAAM,CAACV,UAAU,CAAC,CAAC;IAClCJ,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAMe,gBAAgB,GAAIb,KAAK,IAAG;IACjC;IACA;EAAA,CACA;EAED,oBACE;IAAA,wBACE;MAAA,UAAI;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,eACd;MAAA,UACGL,KAAK,CAACmB,GAAG,CAACC,IAAI,iBACb,QAAC,IAAI;QAAe,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACL,EAAE;QAAA;QAAA;QAAA;MAAA,QAAgB;IACnC;MAAA;MAAA;MAAA;IAAA,QACE,eACL;MAAM,QAAQ,EAAEX,OAAQ;MAAA,wBACtB;QAAO,KAAK,EAAEF,OAAQ;QAAC,QAAQ,EAAEgB;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAE,eACpD;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9B;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAA,GAvCKpB,GAAG;AAAA,KAAHA,GAAG;AAyCT,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}