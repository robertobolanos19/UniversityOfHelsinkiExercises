{"ast":null,"code":"var _jsxFileName = \"/Users/rb/Desktop/FullstackCourse/part2/phonebook/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Filter from './components/Filter';\nimport Form from './components/Form';\n\n// const PersonForm = (props)=>{\n//   return(\n//     <div>\n//       <form>\n//         <input value={props.name} onChange={handleNameChange}/>\n//       </form>\n//     </div>\n//   )\n// }\n\n// const handleNameChange = (e)=>{\n//   //console.log(e.target.value)\n//   //e.target.value is the value being put into the form\n//   setNewName(e.target.value)\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Person = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [props.name, \" \", props.number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = Person;\nconst App = () => {\n  _s();\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas',\n    number: '040-123456',\n    id: 1\n  }, {\n    name: 'Ada Lovelace',\n    number: '39-44-5323523',\n    id: 2\n  }, {\n    name: 'Dan Abramov',\n    number: '12-43-234345',\n    id: 3\n  }, {\n    name: 'Mary Poppendieck',\n    number: '39-23-6423122',\n    id: 4\n  }]);\n  const [newFilter, setNewFilter] = useState('');\n  //new person\n  const [newName, setNewName] = useState('');\n  //phone numbers\n  const [newPhoneNumber, setNewPhoneNumber] = useState('');\n\n  //handlers\n\n  const handleFilter = e => setNewFilter(e.target.value);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const nameObject = {\n      name: newName,\n      number: newPhoneNumber,\n      id: persons.length + 1\n    };\n    if (persons.map(p => p.name).includes(newName)) {\n      alert(`${newName} is already added to phonebook`);\n    } else {\n      alert('ok');\n      setPersons(persons.concat(nameObject));\n      setNewName('');\n      setNewPhoneNumber('');\n    }\n  };\n  const handleNameInput = e => {\n    //e.target.value is the value being put into the form\n    setNewName(e.target.value);\n  };\n  const handleNumInput = e => {\n    console.log(e.target.value);\n    //e.target.value is the value being put into the form\n    setNewPhoneNumber(e.target.value);\n  };\n\n  //end of handlers\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      handler: handleFilter,\n      value: newFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      handleSubmit: handleSubmit,\n      handleNameInput: handleNameInput,\n      newName: newName,\n      handleNumInput: handleNumInput,\n      newPhoneNumber: newPhoneNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n//<PersonForm name={newName} onChange={handleNameChange}/>\n\n/*\n    <div>\n      <h1>Filter shown with: <input type='text' onChange={(e)=> filterPeople(e)}/></h1>\n      {persons.map(p => \n      {\n        return <Person key ={p.id} name={p.name} number={p.number}/>\n      })}\n    </div>    \n*/\n_s(App, \"gle7s6IG4yYW1GVn3NI5Yie+DGI=\");\n_c2 = App;\nexport default App;\n\n/*\nconst App = () => {\n  // ...\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Filter ... />\n\n      <h3>Add a new</h3>\n\n      <PersonForm \n        ...\n      />\n\n      <h3>Numbers</h3>\n\n      <Persons ... />\n    </div>\n  )\n}\n*/\nvar _c, _c2;\n$RefreshReg$(_c, \"Person\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","Filter","Form","Person","props","name","number","App","persons","setPersons","id","newFilter","setNewFilter","newName","setNewName","newPhoneNumber","setNewPhoneNumber","handleFilter","e","target","value","handleSubmit","preventDefault","nameObject","length","map","p","includes","alert","concat","handleNameInput","handleNumInput","console","log"],"sources":["/Users/rb/Desktop/FullstackCourse/part2/phonebook/src/App.js"],"sourcesContent":["import { useState } from 'react'\nimport Filter from './components/Filter'\nimport Form from './components/Form'\n\n// const PersonForm = (props)=>{\n//   return(\n//     <div>\n//       <form>\n//         <input value={props.name} onChange={handleNameChange}/>\n//       </form>\n//     </div>\n//   )\n// }\n\n// const handleNameChange = (e)=>{\n//   //console.log(e.target.value)\n//   //e.target.value is the value being put into the form\n//   setNewName(e.target.value)\n// }\n\n\nconst Person = (props) => {\n  return(\n    <div>\n      <h3>{props.name} {props.number}</h3>\n    </div>  \n  )\n}\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([\n    { name: 'Arto Hellas', number: '040-123456', id: 1 },\n    { name: 'Ada Lovelace', number: '39-44-5323523', id: 2 },\n    { name: 'Dan Abramov', number: '12-43-234345', id: 3 },\n    { name: 'Mary Poppendieck', number: '39-23-6423122', id: 4 }\n  ])\n\n  const [newFilter, setNewFilter] = useState('')\n  //new person\n  const [newName, setNewName] = useState('')\n  //phone numbers\n  const [newPhoneNumber, setNewPhoneNumber] = useState('')\n\n  //handlers\n\n  const handleFilter = (e)=> setNewFilter(e.target.value)\n\n  const handleSubmit = (e)=>{\n    e.preventDefault()\n    \n    const nameObject = \n    {\n      name:newName,\n      number:newPhoneNumber,\n      id: persons.length+1\n    }  \n\n    if(persons.map((p)=>p.name).includes(newName))\n    {\n      alert(`${newName} is already added to phonebook`)\n    }\n    else\n    {\n      alert('ok')\n      setPersons(persons.concat(nameObject))\n      setNewName('')\n      setNewPhoneNumber('')\n    }\n\n    }\n  \n    const handleNameInput = (e)=>{\n      //e.target.value is the value being put into the form\n      setNewName(e.target.value)\n    }\n\n    const handleNumInput = (e)=>{\n      console.log(e.target.value)\n      //e.target.value is the value being put into the form\n      setNewPhoneNumber(e.target.value)\n    }\n\n    //end of handlers\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter handler={handleFilter} value={newFilter}/>\n      <h3>Add a new</h3>\n      <Form \n        handleSubmit={handleSubmit} \n        handleNameInput={handleNameInput} \n        newName={newName}\n        handleNumInput={handleNumInput}\n        newPhoneNumber={newPhoneNumber}\n      />\n      \n    </div>\n  )\n}\n\n//<PersonForm name={newName} onChange={handleNameChange}/>\n\n/*\n    <div>\n      <h1>Filter shown with: <input type='text' onChange={(e)=> filterPeople(e)}/></h1>\n      {persons.map(p => \n      {\n        return <Person key ={p.id} name={p.name} number={p.number}/>\n      })}\n    </div>    \n*/\n\nexport default App\n\n/*\nconst App = () => {\n  // ...\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Filter ... />\n\n      <h3>Add a new</h3>\n\n      <PersonForm \n        ...\n      />\n\n      <h3>Numbers</h3>\n\n      <Persons ... />\n    </div>\n  )\n}\n*/"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA,MAAMC,MAAM,GAAIC,KAAK,IAAK;EACxB,oBACE;IAAA,uBACE;MAAA,WAAKA,KAAK,CAACC,IAAI,EAAC,GAAC,EAACD,KAAK,CAACE,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA;EAAM;IAAA;IAAA;IAAA;EAAA,QAChC;AAEV,CAAC;AAAA,KANKH,MAAM;AAQZ,MAAMI,GAAG,GAAG,MAAM;EAAA;EAEhB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CACrC;IAAEK,IAAI,EAAE,aAAa;IAAEC,MAAM,EAAE,YAAY;IAAEI,EAAE,EAAE;EAAE,CAAC,EACpD;IAAEL,IAAI,EAAE,cAAc;IAAEC,MAAM,EAAE,eAAe;IAAEI,EAAE,EAAE;EAAE,CAAC,EACxD;IAAEL,IAAI,EAAE,aAAa;IAAEC,MAAM,EAAE,cAAc;IAAEI,EAAE,EAAE;EAAE,CAAC,EACtD;IAAEL,IAAI,EAAE,kBAAkB;IAAEC,MAAM,EAAE,eAAe;IAAEI,EAAE,EAAE;EAAE,CAAC,CAC7D,CAAC;EAEF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C;EACA,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C;EACA,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAExD;;EAEA,MAAMiB,YAAY,GAAIC,CAAC,IAAIN,YAAY,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAEvD,MAAMC,YAAY,GAAIH,CAAC,IAAG;IACxBA,CAAC,CAACI,cAAc,EAAE;IAElB,MAAMC,UAAU,GAChB;MACElB,IAAI,EAACQ,OAAO;MACZP,MAAM,EAACS,cAAc;MACrBL,EAAE,EAAEF,OAAO,CAACgB,MAAM,GAAC;IACrB,CAAC;IAED,IAAGhB,OAAO,CAACiB,GAAG,CAAEC,CAAC,IAAGA,CAAC,CAACrB,IAAI,CAAC,CAACsB,QAAQ,CAACd,OAAO,CAAC,EAC7C;MACEe,KAAK,CAAE,GAAEf,OAAQ,gCAA+B,CAAC;IACnD,CAAC,MAED;MACEe,KAAK,CAAC,IAAI,CAAC;MACXnB,UAAU,CAACD,OAAO,CAACqB,MAAM,CAACN,UAAU,CAAC,CAAC;MACtCT,UAAU,CAAC,EAAE,CAAC;MACdE,iBAAiB,CAAC,EAAE,CAAC;IACvB;EAEA,CAAC;EAED,MAAMc,eAAe,GAAIZ,CAAC,IAAG;IAC3B;IACAJ,UAAU,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMW,cAAc,GAAIb,CAAC,IAAG;IAC1Bc,OAAO,CAACC,GAAG,CAACf,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC3B;IACAJ,iBAAiB,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;;EAED;;EAEF,oBACE;IAAA,wBACE;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eAClB,QAAC,MAAM;MAAC,OAAO,EAAEH,YAAa;MAAC,KAAK,EAAEN;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,eAClD;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eAClB,QAAC,IAAI;MACH,YAAY,EAAEU,YAAa;MAC3B,eAAe,EAAES,eAAgB;MACjC,OAAO,EAAEjB,OAAQ;MACjB,cAAc,EAAEkB,cAAe;MAC/B,cAAc,EAAEhB;IAAe;MAAA;MAAA;MAAA;IAAA,QAC/B;EAAA;IAAA;IAAA;IAAA;EAAA,QAEE;AAEV,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,GA3EMR,GAAG;AAAA,MAAHA,GAAG;AAqFT,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}