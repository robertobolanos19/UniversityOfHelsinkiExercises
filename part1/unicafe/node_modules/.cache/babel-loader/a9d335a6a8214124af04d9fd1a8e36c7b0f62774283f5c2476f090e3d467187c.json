{"ast":null,"code":"var _jsxFileName = \"/Users/rb/Desktop/FullstackCourse/part1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Total = _ref => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: good + neutral + bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Total;\nconst Average = _ref2 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"average\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: (good * 1 + neutral * 0 + bad * -1) / (good + neutral + bad)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Average;\nconst Positive = _ref3 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"positive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [good * 100 / (good + neutral + bad), \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Positive;\nconst StatisticLine = _ref4 => {\n  let {\n    text,\n    value\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c4 = StatisticLine;\nconst Statistics = _ref5 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref5;\n  if (!good && !neutral && !bad) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"good\",\n        value: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"neutral\",\n        value: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"bad\",\n        value: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Total, {\n        good: good,\n        neutral: neutral,\n        bad: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Average, {\n        good: good,\n        neutral: neutral,\n        bad: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Positive, {\n        good: good,\n        neutral: neutral,\n        bad: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_c5 = Statistics;\nconst Button = _ref6 => {\n  let {\n    handleClick,\n    text\n  } = _ref6;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_c6 = Button;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c7 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Total\");\n$RefreshReg$(_c2, \"Average\");\n$RefreshReg$(_c3, \"Positive\");\n$RefreshReg$(_c4, \"StatisticLine\");\n$RefreshReg$(_c5, \"Statistics\");\n$RefreshReg$(_c6, \"Button\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["useState","Total","good","neutral","bad","Average","Positive","StatisticLine","text","value","Statistics","Button","handleClick","App","setGood","setNeutral","setBad"],"sources":["/Users/rb/Desktop/FullstackCourse/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Total = ({ good, neutral, bad }) => {\n  return (\n    <tr>\n      <td>all</td>\n      <td>{good + neutral + bad}</td>\n    </tr>\n  )\n}\n\nconst Average = ({ good, neutral, bad }) => {\n  return (\n    <tr>\n      <td>average</td>\n      <td>{(good * 1 + neutral * 0 + bad * (-1) ) / (good + neutral + bad)}</td>\n    </tr>\n  )\n}\n\nconst Positive = ({ good, neutral, bad }) => {\n  return (\n    <tr>\n      <td>positive</td>\n      <td>{good * 100 / (good + neutral + bad)} %</td>\n    </tr>\n  )\n}\n\nconst StatisticLine = ({ text, value }) => {\n  return (\n    <tr>\n      <td>{text}</td> \n      <td>{value}</td>\n    </tr>\n    \n  )\n}\n\nconst Statistics = ({ good, neutral, bad }) => {\n  if (!good && !neutral && !bad) {\n    return (\n      <p>No feedback given</p>\n    )\n  }\n  return (\n    <table>\n      <tbody>\n        <StatisticLine text=\"good\" value={good} />\n        <StatisticLine text=\"neutral\" value={neutral} />\n        <StatisticLine text=\"bad\" value={bad} />\n        <Total good={good} neutral={neutral} bad={bad} />\n        <Average good={good} neutral={neutral} bad={bad} />\n        <Positive good={good} neutral={neutral} bad={bad} />\n      </tbody>\n    </table>\n  )\n}\n\nconst Button = ({ handleClick, text }) => {\n  return (\n    <button onClick={handleClick}>{text}</button>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button handleClick={() => setGood(good + 1)} text=\"good\" />\n      <Button handleClick={() => setNeutral(neutral + 1)} text=\"neutral\" />\n      <Button handleClick={() => setBad(bad + 1)} text=\"bad\" />\n      <h1>statistics</h1>\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}