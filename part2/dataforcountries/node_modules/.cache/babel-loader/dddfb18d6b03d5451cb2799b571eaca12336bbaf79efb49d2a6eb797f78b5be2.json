{"ast":null,"code":"var _jsxFileName = \"/Users/rb/Desktop/FullstackCourse/part2/dataforcountries/src/components/CountriesList.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountriesList = _ref => {\n  let {\n    countries,\n    handleClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: countries.map(country => /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => handleClick(country.name),\n      children: country.name\n    }, country.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 7\n  }, this);\n};\n_c = CountriesList;\nexport default CountriesList;\n\n/*\nfunction CountriesList({ countries, filter }) {\n  if (countries.length === 0) {\n    return <div>No countries found</div>;\n  }\n\n  if (countries.length > 10) {\n    return <div>Too many countries found, please make your query more specific</div>;\n  }\n\n  return (\n    <ul>\n      {countries\n        .filter(country => country.name.toLowerCase().includes(filter.toLowerCase()))\n        .map(country => (\n          <li key={country.alpha3Code}>{country.name}</li>\n        ))}\n    </ul>\n  );\n}\n*/\n\n//   const Countries = ({ countries }) => {\n//   return (\n//   <ul>\n//   {countries.map((country) => (\n//   <li key={country.alpha3Code}>{country.name}</li>\n//   ))}\n//   </ul>\n//   );\n//   };\nvar _c;\n$RefreshReg$(_c, \"CountriesList\");","map":{"version":3,"names":["CountriesList","countries","handleClick","map","country","name"],"sources":["/Users/rb/Desktop/FullstackCourse/part2/dataforcountries/src/components/CountriesList.js"],"sourcesContent":["const CountriesList = ({ countries, handleClick }) => {\n    return (\n      <ul>\n        {countries.map((country) => (\n          <li key={country.name} onClick={() => handleClick(country.name)}>\n            {country.name}\n          </li>\n        ))}\n      </ul>\n    );\n};\n\nexport default CountriesList\n\n/*\nfunction CountriesList({ countries, filter }) {\n  if (countries.length === 0) {\n    return <div>No countries found</div>;\n  }\n\n  if (countries.length > 10) {\n    return <div>Too many countries found, please make your query more specific</div>;\n  }\n\n  return (\n    <ul>\n      {countries\n        .filter(country => country.name.toLowerCase().includes(filter.toLowerCase()))\n        .map(country => (\n          <li key={country.alpha3Code}>{country.name}</li>\n        ))}\n    </ul>\n  );\n}\n*/\n\n\n\n\n  //   const Countries = ({ countries }) => {\n//   return (\n//   <ul>\n//   {countries.map((country) => (\n//   <li key={country.alpha3Code}>{country.name}</li>\n//   ))}\n//   </ul>\n//   );\n//   };"],"mappings":";;AAAA,MAAMA,aAAa,GAAG,QAAgC;EAAA,IAA/B;IAAEC,SAAS;IAAEC;EAAY,CAAC;EAC7C,oBACE;IAAA,UACGD,SAAS,CAACE,GAAG,CAAEC,OAAO,iBACrB;MAAuB,OAAO,EAAE,MAAMF,WAAW,CAACE,OAAO,CAACC,IAAI,CAAE;MAAA,UAC7DD,OAAO,CAACC;IAAI,GADND,OAAO,CAACC,IAAI;MAAA;MAAA;MAAA;IAAA,QAGtB;EAAC;IAAA;IAAA;IAAA;EAAA,QACC;AAEX,CAAC;AAAC,KAVIL,aAAa;AAYnB,eAAeA,aAAa;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}