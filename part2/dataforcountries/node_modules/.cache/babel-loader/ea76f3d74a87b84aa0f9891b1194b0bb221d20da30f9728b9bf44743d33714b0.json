{"ast":null,"code":"//importing axios to execute methods needed to get data from server and utilize other functions\nimport axios from 'axios';\n//url of the server where the data is coming from \nconst baseUrl = \"https://restcountries.com/v3.1/all\";\n\n//getAll is used to get the data from the server\nconst getAll = () => {\n  //const request is initalizing where the data will be coming from\n  const request = axios.get(baseUrl);\n  //the return is using request.then and skimming through the parameters data and returning that data\n  // return request.then(response => {\n  //     console.log('promise fulfilled: got restcountries api')\n  //     let sorted = response.data.slice().sort((a, b) => {\n  //       if (a.name.common < b.name.common) return -1;\n  //       if (a.name.common > b.name.common) return 1;\n  //       return 0;\n  //     })\n  // })\n  let sorted = request.then(response => {\n    response.data.slice().sort((a, b) => {\n      if (a.name.common < b.name.common) return -1;\n      if (a.name.common > b.name.common) return 1;\n      return 0;\n    });\n  });\n  console.log(sorted);\n  return sorted;\n};\n\n//returning functions\nexport default {\n  getAll\n};","map":{"version":3,"names":["axios","baseUrl","getAll","request","get","sorted","then","response","data","slice","sort","a","b","name","common","console","log"],"sources":["/Users/rb/Desktop/FullstackCourse/part2/dataforcountries/src/services/countries.js"],"sourcesContent":["//importing axios to execute methods needed to get data from server and utilize other functions\nimport axios from 'axios';\n//url of the server where the data is coming from \nconst baseUrl = \"https://restcountries.com/v3.1/all\"\n\n\n//getAll is used to get the data from the server\nconst getAll = ()=>{\n    //const request is initalizing where the data will be coming from\n    const request = axios.get(baseUrl)\n    //the return is using request.then and skimming through the parameters data and returning that data\n    // return request.then(response => {\n    //     console.log('promise fulfilled: got restcountries api')\n    //     let sorted = response.data.slice().sort((a, b) => {\n    //       if (a.name.common < b.name.common) return -1;\n    //       if (a.name.common > b.name.common) return 1;\n    //       return 0;\n    //     })\n    // })\n    let sorted = request.then(response =>{\n        response.data.slice().sort((a, b) => {\n            if (a.name.common < b.name.common) return -1;\n            if (a.name.common > b.name.common) return 1;\n            return 0;\n          })\n    })\n    console.log(sorted)\n    return sorted\n}\n\n//returning functions\nexport default {getAll}"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,MAAMC,OAAO,GAAG,oCAAoC;;AAGpD;AACA,MAAMC,MAAM,GAAG,MAAI;EACf;EACA,MAAMC,OAAO,GAAGH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;EAClC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAII,MAAM,GAAGF,OAAO,CAACG,IAAI,CAACC,QAAQ,IAAG;IACjCA,QAAQ,CAACC,IAAI,CAACC,KAAK,EAAE,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACjC,IAAID,CAAC,CAACE,IAAI,CAACC,MAAM,GAAGF,CAAC,CAACC,IAAI,CAACC,MAAM,EAAE,OAAO,CAAC,CAAC;MAC5C,IAAIH,CAAC,CAACE,IAAI,CAACC,MAAM,GAAGF,CAAC,CAACC,IAAI,CAACC,MAAM,EAAE,OAAO,CAAC;MAC3C,OAAO,CAAC;IACV,CAAC,CAAC;EACR,CAAC,CAAC;EACFC,OAAO,CAACC,GAAG,CAACX,MAAM,CAAC;EACnB,OAAOA,MAAM;AACjB,CAAC;;AAED;AACA,eAAe;EAACH;AAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}