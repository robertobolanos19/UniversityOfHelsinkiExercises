{"ast":null,"code":"var _jsxFileName = \"/Users/rb/Desktop/FullstackCourse/part2/dataforcountries/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n//needed to call functions of axios\nimport countriesServices from './services/countries';\n//needed to let the filter system work\nimport Filter from './components/Filter';\n//needed to create a list of objects after filtered\nimport List from './components/List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [newFilter, setNewFilter] = useState('');\n  useEffect(() => {\n    console.log('effect: fetch restcountries api');\n    axios.get('https://restcountries.com/v3.1/all/').then(response => {\n      console.log('promise fulfilled: got restcountries api');\n      let sorted = response.data.slice().sort((a, b) => {\n        if (a.name.common < b.name.common) return -1;\n        if (a.name.common > b.name.common) return 1;\n        return 0;\n      });\n      setCountries(sorted);\n    });\n  }, []);\n  const handleFilter = e => setNewFilter(e.target.value);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Filter, {\n      handleFilter: handleFilter,\n      value: newFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      countries: countries,\n      newFilter: newFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"l0tAOehLyDci0AalhBdxcK8iJbQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","countriesServices","Filter","List","App","countries","setCountries","newFilter","setNewFilter","console","log","get","then","response","sorted","data","slice","sort","a","b","name","common","handleFilter","e","target","value"],"sources":["/Users/rb/Desktop/FullstackCourse/part2/dataforcountries/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios';\n//needed to call functions of axios\nimport countriesServices from './services/countries'\n//needed to let the filter system work\nimport Filter from './components/Filter';\n//needed to create a list of objects after filtered\nimport List from './components/List';\n\n\nconst App = () => {\n  const [countries,setCountries] = useState([])\n  const [newFilter,setNewFilter] = useState('')\n\n  useEffect(() => {\n    console.log('effect: fetch restcountries api')\n    axios\n      .get('https://restcountries.com/v3.1/all/')\n      .then(response => {\n        console.log('promise fulfilled: got restcountries api')\n        let sorted = response.data.slice().sort((a, b) => {\n          if (a.name.common < b.name.common) return -1;\n          if (a.name.common > b.name.common) return 1;\n          return 0;\n        })\n        setCountries(sorted)\n      })\n  }, [])\n\n  const handleFilter = (e) => setNewFilter(e.target.value)\n\n  return(\n    <>\n      <Filter handleFilter={handleFilter} value={newFilter}/>\n      <List countries={countries} newFilter={newFilter}/>\n    </>\n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,iBAAiB,MAAM,sBAAsB;AACpD;AACA,OAAOC,MAAM,MAAM,qBAAqB;AACxC;AACA,OAAOC,IAAI,MAAM,mBAAmB;AAAC;AAAA;AAGrC,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACS,SAAS,EAACC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACdU,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAC9CV,KAAK,CACFW,GAAG,CAAC,qCAAqC,CAAC,CAC1CC,IAAI,CAACC,QAAQ,IAAI;MAChBJ,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;MACvD,IAAII,MAAM,GAAGD,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAChD,IAAID,CAAC,CAACE,IAAI,CAACC,MAAM,GAAGF,CAAC,CAACC,IAAI,CAACC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC5C,IAAIH,CAAC,CAACE,IAAI,CAACC,MAAM,GAAGF,CAAC,CAACC,IAAI,CAACC,MAAM,EAAE,OAAO,CAAC;QAC3C,OAAO,CAAC;MACV,CAAC,CAAC;MACFf,YAAY,CAACQ,MAAM,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,YAAY,GAAIC,CAAC,IAAKf,YAAY,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAExD,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,YAAY,EAAEH,YAAa;MAAC,KAAK,EAAEf;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,eACvD,QAAC,IAAI;MAAC,SAAS,EAAEF,SAAU;MAAC,SAAS,EAAEE;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA,gBAClD;AAEP,CAAC;AAAA,GA3BKH,GAAG;AAAA,KAAHA,GAAG;AA6BT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}