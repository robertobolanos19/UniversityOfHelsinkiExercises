{"ast":null,"code":"var _jsxFileName = \"/Users/rb/Desktop/FullstackCourse/part2/dataforcountries/src/App.js\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from 'react'\n// import axios from 'axios';\n// //needed to call functions of axios\n// import countriesServices from './services/countries'\n// //needed to let the filter system work\n// import Filter from './components/Filter';\n// //needed to create a list of objects after filtered\n// import List from './components/List';\n\n// const App = () => {\n//   const [countries,setCountries] = useState([])\n//   const [newFilter,setNewFilter] = useState('')\n\n//   useEffect(()=>{\n//     countriesServices.getAll()\n//     .then(initialCountries=>{\n//       setCountries(initialCountries)\n//     })\n//   })\n\n//   // useEffect(() => {\n//   //   console.log('effect: fetch restcountries api')\n//   //   axios\n//   //     .get('https://restcountries.com/v3.1/all/')\n//   //     .then(response => {\n//   //       console.log('promise fulfilled: got restcountries api')\n//   //       let sorted = response.data.slice().sort((a, b) => {\n//   //         if (a.name.common < b.name.common) return -1;\n//   //         if (a.name.common > b.name.common) return 1;\n//   //         return 0;\n//   //       })\n//   //       setCountries(sorted)\n//   //     })\n//   // }, [])\n\n//   const handleFilter = (e) => setNewFilter(e.target.value)\n\n//   return(\n//     <>\n//       <Filter handleFilter={handleFilter} value={newFilter}/>\n//       <List countries={countries}/>\n//     </>\n//   )\n// }\n\n// export default App\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    axios.get('https://restcountries.com/v2/all').then(res => {\n      const sortedCountries = res.data.sort((a, b) => a.name.localeCompare(b.name));\n      setCountries(sortedCountries);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Countries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: countries.map(country => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: country.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: country.flag,\n          alt: `Flag of ${country.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, country.alpha2Code, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"u5xOCJaVOCLA9QSfvEC1BLxOVIw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","App","countries","setCountries","get","then","res","sortedCountries","data","sort","a","b","name","localeCompare","catch","err","console","error","map","country","flag","alpha2Code"],"sources":["/Users/rb/Desktop/FullstackCourse/part2/dataforcountries/src/App.js"],"sourcesContent":["// import { useState, useEffect } from 'react'\n// import axios from 'axios';\n// //needed to call functions of axios\n// import countriesServices from './services/countries'\n// //needed to let the filter system work\n// import Filter from './components/Filter';\n// //needed to create a list of objects after filtered\n// import List from './components/List';\n\n// const App = () => {\n//   const [countries,setCountries] = useState([])\n//   const [newFilter,setNewFilter] = useState('')\n\n\n//   useEffect(()=>{\n//     countriesServices.getAll()\n//     .then(initialCountries=>{\n//       setCountries(initialCountries)\n//     })\n//   })\n\n//   // useEffect(() => {\n//   //   console.log('effect: fetch restcountries api')\n//   //   axios\n//   //     .get('https://restcountries.com/v3.1/all/')\n//   //     .then(response => {\n//   //       console.log('promise fulfilled: got restcountries api')\n//   //       let sorted = response.data.slice().sort((a, b) => {\n//   //         if (a.name.common < b.name.common) return -1;\n//   //         if (a.name.common > b.name.common) return 1;\n//   //         return 0;\n//   //       })\n//   //       setCountries(sorted)\n//   //     })\n//   // }, [])\n\n\n//   const handleFilter = (e) => setNewFilter(e.target.value)\n\n//   return(\n//     <>\n//       <Filter handleFilter={handleFilter} value={newFilter}/>\n//       <List countries={countries}/>\n//     </>\n//   )\n// }\n\n// export default App\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get('https://restcountries.com/v2/all')\n      .then(res => {\n        const sortedCountries = res.data.sort((a, b) =>\n          a.name.localeCompare(b.name)\n        );\n        setCountries(sortedCountries);\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>List of Countries</h1>\n      <ul>\n        {countries.map(country => (\n          <li key={country.alpha2Code}>\n            <h2>{country.name}</h2>\n            <img src={country.flag} alt={`Flag of ${country.name}`} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAG1B,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdC,KAAK,CACFI,GAAG,CAAC,kCAAkC,CAAC,CACvCC,IAAI,CAACC,GAAG,IAAI;MACX,MAAMC,eAAe,GAAGD,GAAG,CAACE,IAAI,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KACzCD,CAAC,CAACE,IAAI,CAACC,aAAa,CAACF,CAAC,CAACC,IAAI,CAAC,CAC7B;MACDT,YAAY,CAACI,eAAe,CAAC;IAC/B,CAAC,CAAC,CACDO,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,UAAI;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC1B;MAAA,UACGb,SAAS,CAACgB,GAAG,CAACC,OAAO,iBACpB;QAAA,wBACE;UAAA,UAAKA,OAAO,CAACP;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM,eACvB;UAAK,GAAG,EAAEO,OAAO,CAACC,IAAK;UAAC,GAAG,EAAG,WAAUD,OAAO,CAACP,IAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA,GAFnDO,OAAO,CAACE,UAAU;QAAA;QAAA;QAAA;MAAA,QAI5B;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV,CAAC;AAAC,GA9BIpB,GAAG;AAAA,KAAHA,GAAG;AAgCT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}